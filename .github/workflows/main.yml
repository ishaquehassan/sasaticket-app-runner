on:
  push:
    branches:
      - 'master'

name: Release build jobs
jobs:
  build-apks:
    name: Android build release matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        flavor: ['dev', 'qa', 'stage', 'prod']
    steps:
      - uses: actions/checkout@v2
      - name: Install npm packages
        run: npm i
      - name: Decode service account base64
        run: echo "$ACCOUNT_ENV64" | base64 -d > ./service-key.json
        env:
          ACCOUNT_ENV64: ${{ secrets.SERVICE_ACCOUNT64 }}
      - name: Create folder if dev
        if: matrix.flavor == 'dev'
        run: node createDir
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.2.2'
      - name: Flutter doctor
        run: flutter doctor

      - name: Cache Flutter dependencies
        uses: actions/cache@v2
        with:
          path: /opt/hostedtoolcache/flutter
          key: ${{ runner.OS }}-flutter-install-cache-222

      - uses: actions/checkout@v2
        with:
          ref: 'runner'
          path: 'app'
          token: ${{ secrets.PAT_TOKEN }}
          repository: 'sastaTicket/sastaticket-mobile-app'

      - name: Decode keystore base64
        run: echo "$KEYSTORE_ENV64" | base64 -d > ./sastaticket-prod.keystore
        env:
          KEYSTORE_ENV64: ${{ secrets.STORE64 }}

      - name: Fetch packages
        run: cd app && flutter pub get

      - name: Build ${{ matrix.flavor }} release apk
        run: cd app && flutter build apk --flavor ${{ matrix.flavor }}
      - run: node upload.js --file="app/build/app/outputs/flutter-apk/app-${{ matrix.flavor }}-release.apk"
      - uses: actions/upload-artifact@v2
        with:
          name: app-${{ matrix.flavor }}-release.apk
          path: app/build/app/outputs/flutter-apk/app-${{ matrix.flavor }}-release.apk

  send-email:
    name: Send email to recipients
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install npm packages
        run: npm i
      - name: Decode service account base64
        run: echo "$ACCOUNT_ENV64" | base64 -d > ./service-key.json
        env:
          ACCOUNT_ENV64: ${{ secrets.SERVICE_ACCOUNT64 }}

      - name: Send emails
        needs: build-apks
        run: node mail --to=$TO --from=$FROM --user=$USERNAME --key=$PASSWORD
        # run: node mail --to=$TO --from=$FROM --user=$USERNAME --password=$PASSWORD
        env:
          TO: ${{ secrets.MAIL_TO }}
          FROM: ${{ secrets.MAIL_FROM }}
          USERNAME: ${{ secrets.MAIL_USERNAME }}
          PASSWORD: ${{ secrets.MAIL_PASSWORD }}
